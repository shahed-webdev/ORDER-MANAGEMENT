
@{
    ViewBag.Title = "Stocks";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section Styles {
    <link href="~/CSS/bootstrap-select.css" rel="stylesheet" />
    <style>
        .selected .dropdown-item { color: #2b9000 }
    </style>
}

<div class="card card-body m-md-3">
    <h3 class="mb-0">Stock</h3>
    <a class="d-inline-block mb-3" href="/Depot/Depot">Back to Depots</a>

    <div class="row mb-3">
        <div class="col">
            <div class="form-group">
                <label>Category</label>
                @Html.DropDownList("MainCategory", null, "[ SELECT ]", new { @class = "form-control" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label>Sub Category</label>
                <select id="selectSubCategory" class="form-control select-picker" multiple></select>
            </div>
        </div>
    </div>

    <table id="DataTable" class="table table-sm table-bordered">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Code</th>
                <th>SKU</th>
                <th>Size</th>
                <th>MRP</th>
                <th>Stock</th>
                <th>Return</th>
            </tr>
        </thead>
    </table>
</div>


<!-- Modal return -->
<div class="modal fade" id="returnModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog cascading-modal" role="document">
        <div class="modal-content">
            <div class="modal-header blue-gradient white-text">
                <h4 class="m-0"><i class="fas fa-plus-circle"></i> Return Product</h4>
                <button type="button" class="close waves-effect waves-light" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formAssign">
                    <div class="form-group">
                        <div class="text-center mb-2">
                            <strong id="showProductName"></strong>
                            <span id="show-quantity" class="badge badge-pill badge-success"></span>
                        </div>

                        <input type="hidden" id="regionId"/>
                        <input type="hidden" id="distributorId"/>
                        <input id="inputReturnQuantity" placeholder="Return Quantity" type="number" class="form-control" min="0"/>
                    </div>

                    <div class="text-center mt-1-half">
                        <button id="btnTransfer" type="submit" class="btn blue-gradient mb-1 waves-effect waves-light">Return <i class="fas fa-check ml-1"></i></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/JS/bootstrap-select.js"></script>
    <script>
        $(function () {
            $(".select-picker").selectpicker({
                actionsBox: true,
                liveSearch: false,
                selectedTextFormat: 'count > 4',
                style: '',
                styleBase: 'form-control',
                tickIcon: 'fas fa-check-circle',
                size: 5
            });

            //Get sub-category
            $("#MainCategory").change(function () {
                const url = "/Products/GetSubCategory";
                const id = $(this).val();
                var select = $('#selectSubCategory');

                select.empty();
                select.selectpicker("refresh");
                $("#table_row").empty()

                if (!id) return;

                $.get(url, { id }, function (response) {
                    if (response.length) {
                        $.each(response, function (i, item) {
                            select.append($('<option/>', { value: item.value, text: item.label }));
                        });
                        select.selectpicker("refresh");
                    };
                });
            });

            //category Change
            $('#selectSubCategory').change(function () {
                dataTable.filter = [];
                $('#selectSubCategory :selected').each(function (i, selected) {
                    dataTable.filter[i] = parseInt($(selected).val());
                });

                dataTable.depotId.push({ Field: "DepotId", Value: "@ViewBag.DepotId", Operand: dataTable.operand.Equal });
                dataTable.getData();
            });
        });

        //show Transfer modal
        $('#DataTable').on("click", ".btn-return", function(evt) {
            evt.preventDefault();

            $('#inputReturnQuantity').attr("max", $(this).attr("data-value"));

            $('#returnModal').modal('show');
            $("#inputReturnQuantity").attr("max", $(this).attr("data-value"));
            $("#depotId").val($(this).attr("data-id"));

            $("#showProductName").text($(this).attr("data-name"));
            $("#show-quantity").text($(this).attr("data-value"));
        });


        var dataTable = {
            table: null,
            filter: [],
            depotId:[],
            init: function () {
                dataTable.table = $("#DataTable").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Depot/GetCategoryProduct",
                        type: "POST",
                        data: function (d) {
                            d.filter = dataTable.filter
                            d.filters = dataTable.depotId
                        }
                    },
                    columns:
                        [
                            { data: "ProductName" },
                            { data: "ProductCode" },
                            { data: "SKU" },
                            { data: "Size" },
                            { data: "MRP"},
                            { data: "Quantity" },
                            { data: "Quantity", "render": function(data, type, row, meta) {
                                    return `<a data-value="${data}" data-id="${row.ProductID}" data-name="${row.ProductName}" class="btn-return blue-text">Return</a>`;
                                }
                            },
                        ],
                    columnDefs: [
                        //{ 'searchable': false, 'targets': [2, 3, 4, 5, 6, 7] },
                        //{ 'sortable': false, 'targets': [6, 7] }
                    ]
                });
            },
            getData: function () {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            }
        }
    </script>
}